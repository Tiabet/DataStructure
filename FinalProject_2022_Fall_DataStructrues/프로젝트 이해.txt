cp_mean : 목적함수에서의 계수 (칼럼썸하기 전)
칼럼썸해야하는 이유는 10000 * 3000 이라서 그런데
과거 데이터 같은 느낌임. -> Ldata로 만들어야함
cp_return : contraint에서의 계수 (1*3000) 
vars.txt : 사용한 변수들이 저장되어 있음, data는 80000개
point : 변수들의 상한치 (3000*1)


constraint는 한 개임, const는 0.096

이런 제약과 조건은 그대로고,
사용하는 변수 (x1,x2,..,x3000)만 달라진게 80000건이 있는 것임. (vars.txt)


1. cp_mean 칼럼썸해서 Ldata 만들어야하고 (1*3000 으로 만들어야함)
2. left_coefficient, right_constraint,vars 등 이용해서 s_cost, s_left, s_right등 만들어야하고
3. LP 풀어서 메모장에 적어야함 + 시간까지 적어야함
4. 이걸 80000번 반복


s_cost는 목적함수 계수, s_left_c는 constraint에서 x들의 계수, s_right_c는 const
이걸 matrix로 저장하기만 하면 됨
matrix로 저장할 때 vars[]에서 어떤x들이 사용되었는지 읽어와야함.
vars[]의 행마다 사용되는 x들이 저장되어 있음.(80000*3000)
사용되는 x에 해당하는 열만 긁어와서 solvers에 사용할 s_cost, s_left_c에 넣어야함.


1.right_constraint를 s_right_c에다 전치만 해주고 그대로 넣으면 됨
2.s_cost에다가는 위에서 Ldata읽고 나온 cost를 넣으면 됨 전치안해줘도 됨
3. s_left_c에다가는 left_coefficient 를 열대로 읽어서 넣으면 됨 그러면 [ ]이 3000개 나올것임
(단, [1,2,3,4,5]같이 행이 1이게 넣어야함! matrix1개에 x1개가 들어감)


이때 문제는 minimize고 (이미 만족)
const에서 부등호는 <이어야함 그래서 음수값 씌움
그런데 cp_result matrix 만드는 과정에서 3000*1으로 저장되기 때문에 트랜스포즈해줌

맨위에 1, 그 아래에 -1을 넣는 이유는 x들의 합이 1로 맞춰져야 하기 때문

3000*3000 음수 단위행렬 넣는 이유는 x가 0보다 커야하기 때문

3000*3000 단위행렬 넣는 이유는 x의 상한선이 point2x0으로 정해져있기 때문